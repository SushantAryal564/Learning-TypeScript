2. Using Types
   TypeScript type system only helps you during development (i.e before the code gets compiled.)
3. TypeScript Types vs Javascript Types
   Javascript is dynamically typed whereas TypeScript is statically typed. 
6. Tyes Assignment & Type Inference
   Type inferences: Typescript does its best to understand which type we have in the variable or constant. 
7. Object Types:
   Any javaScript object, more specific types (type of object) are possible.
   TypeScript inferes to the type of data in the object.
8. Arrays Types:
   We can store any data in an Array. Any Javascript array, type can be flexible or strict. 
9. Working with Tuples
   Added to TypeScript: Fixed length array as well as fixed type
10. Working with Enums
   enum{New,old} Added by typeScript: Automatically enumerated global constant identifiers
11. The any types
   It is one of the most flexible type that we can assign. It doesn't tell typescript anything. Any kind of values, no specific type. We should always try to avoid any it takes all the advantages that the typescript has provided. 
12. Union Types
   If we have some place in  our application can be parameter or anything where we can expect two different types of value Union can help us.
14. Literal Types
   Literal types are types where we are sure for exact value it should hold. 
15. Function Return Types and void
    If we don't return anything from the function than the function have a special return type called void. void means function has no return statement.
16. Function as types
   Function type are the function that describe the function regarding the parameter and return type.
19. Funtion Types and callbacks
    
20 The Unknown Types
   It is unknown cause we don't know what the user will enter in it. we can store any value in it without getting error.
   unknown is bit more restrictive than any. we have to check the type that is stored in unknown variable before we can assign another variable.
21. The never Types
   